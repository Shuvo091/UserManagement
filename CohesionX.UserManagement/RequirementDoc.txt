Solidariteit Praat
User Management Microservice Version 5.0 | 9 Jul 2025
Prepared by Architecture
Table of Contents
1. Purpose
2. Scope
3. Service Boundaries & Integration Points
4. Target Platform & Standards
5. High-Level Architecture
6. Functional Requirements
7. Non-Functional Requirements
8. API Specification (v1)
9. Elo Rating System & Performance Tracking
10. Test Strategy
11. CI / CD & Deployment
1 Purpose
The User Management Microservice provides a stateless, horizontally-scalable foundation
for managing transcriber profiles, authentication, chess-style Elo performance rankings,
and open-access job claiming within the CohesionX transcription platform.
This service acts as the central user management layer that:
• Handles Authentication: Manages OAuth 2.0 authentication and role-based access
control (RBAC) for transcribers, QA reviewers, and administrators
• Maintains Elo Rankings: Tracks performance-based Elo ratings with head-to-head
comparison adjustments based on transcription quality assessments
• Enables Open-Access Job Claiming: Provides flexible job claiming system where
users can pick up available jobs without pre-assignment or scheduling constraints
• Tracks Performance: Maintains comprehensive Elo-based performance metrics for
quality assurance and payment processing
2 Scope
What This Service Includes
Functionality Description
User registration, authentication & profile
management
Complete user lifecycle from registration through
verification to active transcription work
Elo-based performance rating system with Competitive rating system based on head-to-head
dynamic adjustments transcription quality comparisons
Open-access job claiming system (no preassignment
or scheduling)
Flexible job claiming where users pick up available
jobs with book-out and timeout management
Performance tracking & Elo statistics Comprehensive Elo-based metrics calculation and
performance analytics
RBAC with role management (Transcriber,
Professional, QA Reviewer, Admin)
Role-based permissions and access control
integration
What This Service Does NOT Include
Functionality Reason
Payment processing, wallet
management
Handled by dedicated Payment Service
Audio transcription, quality review Managed by Transcription and QA Services
WhatsApp bot integration, notifications Covered by Notification Service
Admin dashboard UI, reporting
interfaces
Frontend applications consume this API
User scheduling, calendar management Removed in favor of open-access job claiming system
Qualification tests, initial testing phases Removed - all performance based on Elo ratings over
time
3 Service Boundaries & Integration Points
3.1 Core Responsibilities
User Management Service owns and manages:
• User authentication, profiles, and account lifecycle
• Chess-style Elo rating storage and updates (receives recommendations from QA
Service)
• User availability status and concurrent job limits
• Performance statistics and historical Elo tracking
• User preferences and dialect specializations
3.2 External Dependencies
Services we integrate with:
• Workflow Engine: Receives orchestration commands for Elo updates and user state
changes
• QA Service: Receives Elo change recommendations via Workflow Engine
• Transcription Service: Provides user availability validation via Workflow Engine
Services we do NOT directly interact with:
• No direct job browsing or claiming (handled by Transcription Service)
• No job availability queries (Transcription Service owns job pool)
• No direct transcription quality assessment (handled by QA Service)
• No direct audio processing or storage management
3.3 API Endpoint Categories
Workflow-Orchestrated Endpoints (called by Workflow Engine):
• POST /api/v1/elo-update - Apply Elo changes from QA Service recommendations
• GET /api/v1/users/{userId}/availability - Check user availability for job
assignment
Direct Client Endpoints (called by UI/applications):
• GET /api/v1/users/{userId}/profile - User profile and statistics
• PATCH /api/v1/users/{userId}/availability - Update availability status
• GET /api/v1/leaderboard - Public performance rankings
Admin Endpoints (restricted access):
• PUT /api/v1/admin/config - Configuration management
• POST /api/v1/admin/users/{userId}/set-professional - Designate user as
professional transcriber
3.4 Event Publishing
Publishes audit events to Kafka
• user.elo.updated - Triggers Workflow Engine to finalise job workflow
• user.availability.updated - Audit trail only
• user.performance.milestone - Audit trail only
Workflow Notifications (Direct HTTP):
• POST to Workflow Engine /webhook/user-events for Elo completion
3.5 Professional Status Coordination
Workflow Engine Responsibilities:
1. Query User Management for professional status before QA comparison
2. Include professional status in all relevant API calls
3. Skip QA comparison when ANY transcriber is professional
4. Route professional transcriptions directly to completion
Service Responsibilities:
• User Management: Maintains authoritative professional designation
• QA Service: Receives professional status from Workflow Engine (doesn’t query
directly)
• Transcription Service: Receives professional status for UI display only
3.6 Workflow Engine Orchestration Pattern
The Workflow Engine uses a hybrid push-pull pattern for orchestration:
Push Notifications (Services → Workflow Engine):
1. Transcription Service notifies on each transcription completion
2. QA Service notifies on comparison completion
3. User Management notifies on Elo update completion
Pull Queries (Workflow Engine → Services):
1. Check job comparison readiness before initiating QA
2. Query comparison status for long-running operations
3. Verify final states before proceeding to next step
Orchestration Flow: Transcription Complete (push) → Workflow checks readiness (pull) →
Initiate comparison if ready → Comparison complete (push) → Orchestrate Elo update →
Elo update complete (push) → Finalize job
Benefits:
• Push ensures immediate awareness of state changes
• Pull allows verification before critical decisions
• No reliance on event-driven coupling between services
4 Target Platform & Standards
Technology Stack and Platform Decisions
Component Technology Choice
Runtime
Platform
.NET 8 (LTS) — planned upgrade to .NET 9 once GA images become available
Container Base
Image
mcr.microsoft.com/dotnet/aspnet:8.0-alpine for optimized production
deployment
API Protocol HTTP REST API with JSON payload. Optional gRPC wrapper available via
ENABLE_GRPC=true environment flag
Authentication &
Authorization
OAuth 2.0/OIDC integration with VectorMind IdentityServer using JWT bearer
tokens with role-based claims (transcriber, professional, qa_reviewer, admin)
Data Storage PostgreSQL 15/Flex for persistent user profiles, statistics, and audit logsRedis
Cluster for session caching and real-time availability state
Event Messaging API-First Architecture: Receives orchestration commands via HTTP API calls
from Workflow Engine only. Publishes audit events (user_job_claimed,
user_elo_updated, user_availability_updated) to Kafka for
monitoring/audit purposes only - events do not trigger other services.
Monitoring &
Observability
OpenTelemetry traces, Prometheus /metrics endpoint, Serilog JSON
structured logs with PII masking
4.1 Data Storage Architecture
4.1.1 PostgreSQL (Primary Database)
User Profiles & Persistent Data:
-- Core user profile data
users (id, first_name, last_name, email, phone, id_number, elo_rating,
peak_elo, status, role, is_professional, created_at, updated_at)
user_dialects (user_id, dialect, proficiency_level, is_primary)
user_statistics (user_id, total_jobs, current_elo, peak_elo, games_played,
last_calculated)
-- Elo rating system
elo_history (id, user_id, old_elo, new_elo, reason, qa_comparison_id,
job_id, outcome, comparison_source, k_factor_used, changed_at)
job_completions (id, user_id, job_id, outcome, elo_change, qa_comparison_id,
qa_service_reference, completed_at)
job_claims (id, user_id, job_id, claimed_at, book_out_expires_at, status)
-- Audit and verification
audit_logs (id, user_id, action, details_json, timestamp, ip_address)
verification_records (id, user_id, verification_type, status,
verification_data, verified_at, created_at)
Database Entity Relationship Diagram
Database Schema Details
Primary Tables:
• USERS: Core user profile information with Elo rating and peak Elo tracking
• USER_DIALECTS: Dialect expertise and proficiency levels (1:many)
• USER_STATISTICS: Elo-based performance metrics and calculated statistics (1:1)
Elo & Performance Tracking Tables:
• ELO_HISTORY: Complete audit trail of all Elo rating changes with comparison
references
• JOB_COMPLETIONS: Individual job performance records with Elo changes and
comparison references
• JOB_CLAIMS: Open-access job claiming system with book-out timeout management
Audit & Verification Tables:
• AUDIT_LOGS: Security and activity logging for compliance
• VERIFICATION_RECORDS: Verification process tracking (simplified - no
qualification tests, Elo-based performance assessment)
Key Constraints:
• users.email and users.id_number have unique constraints
• All foreign keys maintain referential integrity
• Timestamps for audit trails and performance tracking
• JSONB fields for flexible verification data storage
• Elo ratings stored as integers (scaled for precision if needed)
4.1.2 Redis (Real-time Cache & Locks)
Fast Access & Concurrency Control:
# Real-time availability status (TTL: 6 hours)
user:availability:{userId} = {
"status": "available|busy|offline|leave",
"maxConcurrentJobs": 3,
"currentWorkload": 1,
"lastUpdate": "2025-07-04T14:30:00Z"
}
# Job claiming locks for concurrency control (TTL: 30 seconds)
job:claim:lock:{jobId} = "user_id_claiming_job"
# Active job claims (TTL: 8 hours - covers book-out timeout)
user:claims:{userId} = ["job_123", "job_456"]
# Elo performance cache for matching (TTL: 1 hour)
user:elo:{userId} = {
"currentElo": 1367,
"peakElo": 1425,
"gamesPlayed": 45,
"recentTrend": "+23_over_7_days",
"lastJobCompleted": "2025-07-04T13:45:00Z"
}
4.1.3 Data Flow & Synchronization Strategy
Our hybrid data architecture ensures both high performance and data consistency:
1. Real-time Availability Updates: Changes are immediately written to Redis for fast
access, then asynchronously synchronized to PostgreSQL for audit trails
2. Job Claiming Process: Redis distributed locks prevent double-claiming during
concurrent operations, while PostgreSQL maintains the permanent claim record
3. Elo Performance Metrics: Calculated from historical data in PostgreSQL, then cached
in Redis for rapid job matching
4. Available Job Pool: Available jobs are cached in Redis for efficient job claiming and
browsing
Configuration-First Design — All system thresholds (like
INITIAL_ELO_RATING=1200, ELO_K_FACTOR=32, JOB_TIMEOUT_HOURS=4) and
compliance settings (ENABLE_ID_DOCUMENT_COLLECTION,
POPIA_COMPLIANCE_MODE) can be overridden via environment variables, following
our established microservice configuration pattern.
5 High-Level Architecture
5.1 Sequence - Job Claiming Flow
6 Functional Requirements
Core System Capabilities
Requirement
ID
Functional Capability
F-1 User Registration & Verification: Support user registration with configurable South
African ID verification (optional) and minimum age 18 enforcement, including PII
collection toggles for POPIA compliance
F-1a Automatic User Activation: Implement automatic activation when minimal
verification requirements are met: required fields completed and basic field
validation (V1 uses format checks only)
F-1b Verification Roadmap: V1 ID verification limited to format validation and photo
presence checks; V2 roadmap includes automated Department of Home Affairs
verification via Experian or similar service
F-2 Authentication Integration: Integrate with VectorMind IdentityServer for OAuth
2.0/OIDC authentication with role-based claims (Transcriber, Professional, QA
Reviewer, Admin)
F-3 Elo Rating System: Implement dynamic Elo rating system based on head-to-head
transcription quality comparisons with configurable K-factors and initial ratings
F-4 Open-Access Job Claiming: Provide flexible job claiming system where users can
pick up available jobs based on dialect preferences and personal interest
F-5 Performance Analytics: Track comprehensive Elo-based performance metrics
including current rating, peak rating, games played, and recent trends
F-6 Simple Availability Management: Implement basic availability system with status
tracking (available, busy, offline, leave) and timeout management
F-7 Admin Operations: Support bulk operations for admin functions including Elo
adjustments, account suspension, performance reviews, and data export
F-8 Professional Role Management: Support designation of professional transcribers
who bypass head-to-head QA comparison for streamlined workflow
F-9 Event Integration: Emit CloudEvents for Elo changes, availability updates, and job
claim notifications for downstream service integration
7 Non-Functional Requirements
Performance and Operational Standards
Category Target Performance & Standards
Scalability Horizontally scalable architecture supporting 5,000+ concurrent users and 500
concurrent assignment operations. Auto-scaling with HPA on CPU and memory
usage (minimum 2 pods, maximum 10 pods)
Performance User lookup response time p95 ≤ 200ms; job claiming p95 ≤ 500ms even with 500
concurrent operations; Elo calculation batch processing completes within 5 minutes
Availability 99.5% uptime during business hours with graceful degradation using cached data
when database becomes unavailable
Security OAuth 2.0 JWT token validation, role-based access control (RBAC) enforcement, PII
encryption at rest, and comprehensive audit logs for all profile changes
Data
Integrity
ACID transactions for Elo changes, eventual consistency for statistics, and point-intime
recovery capability for data protection
Compliance Full POPIA compliance with data retention policies, audit trail retention for ≥3
years, and support for data subject’s right to erasure
8 API Specification (v1)
8.1 POST /api/v1/users/register
User registration with profile creation.
{
"idNumber": "9001011234567",
"firstName": "Sarah",
"lastName": "Malan",
"email": "sarah.malan@example.com",
"phoneNumber": "+27821234567",
"dialectPreferences": ["western_cape", "northern_cape"],
"languageExperience": "native",
"consentToDataProcessing": true
}
Response 201 Created
{
"userId": "usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"eloRating": 1200,
"status": "pending_verification",
"profileUri": "/api/v1/users/usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"verificationRequired": [
"id_document_upload"
]
}
Verification Process:
• V1 Automatic Verification: Basic field validation (SA ID format check, photo upload
confirmation) + automatic activation. No manual verification of ID authenticity. All
performance assessment based on Elo ratings over time.
• V2 Planned Enhancement: Integration with Department of Home Affairs via
Experian or similar service for automated ID verification.
• Current Limitation: ID photos are stored but not verified for authenticity - field
validation only checks format and presence.
8.1.1 POST /api/v1/users/{userId}/verify
Complete user verification process with configurable requirements (V1 - field validation
only).
{
"verificationType": "id_document",
"idDocumentValidation": {
"enabled": true,
"idNumber": "9001011234567",
"photoUploaded": true,
"validationResult": {
"idFormatValid": true,
"photoPresent": true,
"note": "V1_field_validation_only"
}
},
"additionalVerification": {
"phoneVerification": true,
"emailVerification": true
}
}
Response 200 OK
{
"verificationStatus": "approved",
"eloRating": 1200,
"statusChanged": "pending_verification -> active",
"eligibleForWork": true,
"activationMethod": "automatic",
"activatedAt": "2025-07-04T11:45:30Z",
"verificationLevel": "basic_v1",
"nextSteps": [
"profile_completion",
"job_browsing"
],
"roadmapNote": "V2 will include automated ID verification via Department of
Home Affairs"
}
8.1.2 PUT /api/v1/users/{userId}/verification-requirements
Admin endpoint to configure verification requirements per user or globally.
{
"requireIdDocument": true,
"requirePhotoUpload": true,
"requirePhoneVerification": true,
"requireEmailVerification": true,
"verificationLevel": "basic_v1",
"validationRules": {
"idNumber": "format_validation_only",
"photo": "presence_check_only",
"note": "V2_will_add_dha_verification"
},
"reason": "PII_compliance_SA_POPIA_with_basic_validation"
}
Response 200 OK
{
"requirementsUpdated": true,
"piiDataCollection": true,
"complianceMode": "POPIA_basic_validation",
"verificationLevel": "v1_field_validation",
"verificationSteps": [
"phone_verification",
"email_verification",
"id_format_check",
"photo_presence_check"
],
"roadmapEnhancements": {
"v2_planned": "dha_automated_verification",
"v2_provider": "experian_or_similar"
}
}
8.2 GET /api/v1/users/available-for-work
Query transcribers who are available to take on new jobs. Note: This returns USER
availability, not job availability. For available jobs, see Transcription Service. Purpose:
Returns users who are currently available to work, used by Workflow Engine for matching
and notifications. This does NOT return available jobs - use Transcription Service
/api/v1/jobs/available for that. Parameters:
• dialect (optional): Filter by dialect expertise
• minElo (optional): Minimum Elo rating requirement
• maxElo (optional): Maximum Elo rating limit
• maxWorkload (optional): Maximum active jobs per user
• limit (optional): Maximum results to return
Response 200 OK
{
"availableUsers": [
{
"userId": "usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"eloRating": 1367,
"peakElo": 1425,
"dialectExpertise": ["western_cape"],
"currentWorkload": 2,
"recentPerformance": "+23_over_7_days",
"gamesPlayed": 45,
"role": "professional",
"bypassQaComparison": true,
"lastActive": "2025-07-04T10:30:00Z"
}
],
"totalAvailable": 47,
"queryTimestamp": "2025-07-04T11:15:30Z"
}
8.3 POST /api/v1/elo-update
Caller: Workflow Engine → User Management
Update user Elo ratings based on comparison results from QA Service.
{
"workflowRequestId": "wf_req_8d9e7f6a-5b4c-3d2e-1f0a-9b8c7d6e5f4a",
"qaComparisonId": "cmp_f7d4e3c2-b1a0-9876-5432-1098765432ab",
"qaServiceReference":
"https://api.qa.service/api/v1/comparisons/cmp_f7d4e3c2-b1a0-9876-5432-
1098765432ab",
"recommendedEloChanges": [
{
"transcriberId": "usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"oldElo": 1250,
"recommendedChange": +18,
"comparisonOutcome": "win",
"opponentElo": 1180
},
{
"transcriberId": "usr_6d2f8e4b-1a9c-4d73-b5e1-9f8c3d7a2e5b",
"oldElo": 1180,
"recommendedChange": -18,
"comparisonOutcome": "loss",
"opponentElo": 1250
}
],
"comparisonMetadata": {
"audioSegmentId": "seg_001_012",
"comparisonType": "head_to_head",
"qaConfidence": 0.92,
"qaMethod": "openai_linguistic_analysis",
"comparisonTimestamp": "2025-06-29T10:35:00Z"
}
}
Response 200 OK
{
"workflowRequestId": "wf_req_8d9e7f6a-5b4c-3d2e-1f0a-9b8c7d6e5f4a",
"eloUpdatesApplied": [
{
"transcriberId": "usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"oldElo": 1250,
"newElo": 1268,
"eloChange": +18,
"comparisonOutcome": "win"
},
{
"transcriberId": "usr_6d2f8e4b-1a9c-4d73-b5e1-9f8c3d7a2e5b",
"oldElo": 1180,
"newElo": 1162,
"eloChange": -18,
"comparisonOutcome": "loss"
}
],
"comparisonId": "cmp_f7d4e3c2-b1a0-9876-5432-1098765432ab",
"updatedAt": "2025-07-04T11:15:30Z"
}
8.4 GET /api/v1/users/{userId}/profile
Retrieve detailed user profile and statistics.
Response 200 OK
{
"userId": "usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"profile": {
"firstName": "Sarah",
"lastName": "M.",
"eloRating": 1367,
"peakElo": 1425,
"status": "active",
"registeredAt": "2025-05-15T09:20:00Z",
"isProfessional": false,
"professionalEligibility": { /
"eligible": false,
"missingCriteria": ["elo_rating", "total_jobs"],
"progress": {
"eloProgress": "1367/1600",
"jobsProgress": "247/500"
}
},
"statistics": {
"totalJobsCompleted": 247,
"gamesPlayed": 45,
"eloTrend": "+23_over_7_days",
"dialectExpertise": ["western_cape", "northern_cape"],
"winRate": 0.67,
"last30Days": {
"jobsCompleted": 31,
"eloChange": "+18",
"earnings": 465.50
}
},
"preferences": {
"maxConcurrentJobs": 3,
"dialectPreferences": ["western_cape"],
"preferredJobTypes": ["conference_calls", "interviews"]
}
}
8.5 PATCH /api/v1/users/{userId}/availability
Update user availability status.
{
"status": "available",
"maxConcurrentJobs": 3,
"notes": "Available for transcription work"
}
Response 200 OK
{
"availabilityUpdated": true,
"currentStatus": "available",
"maxConcurrentJobs": 3,
"lastUpdated": "2025-07-04T11:30:00Z"
}
8.7 GET /api/v1/users/{userId}/elo-history
Retrieve user’s Elo rating history and performance trends.
Response 200 OK
{
"userId": "usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"currentElo": 1367,
"peakElo": 1425,
"initialElo": 1200,
"gamesPlayed": 45,
"eloHistory": [
{
"date": "2025-07-04T11:45:30Z",
"oldElo": 1352,
"newElo": 1367,
"change": "+15",
"opponent": "usr_other_transcriber",
"outcome": "win",
"jobId": "job_42b8e332-f4d6-4630-9e71-c0da5af4e822"
}
],
"trends": {
"last7Days": "+23",
"last30Days": "+67",
"winRate": 0.67,
"averageOpponentElo": 1334
}
}
8.8 Workflow Engine Orchestration Endpoints
8.8.1 POST /api/v1/users/{userId}/claim-job
Caller: Workflow Engine → User Management Service
Validate user eligibility and reserve capacity for job claim.
{
"jobId": "job_42b8e332-f4d6-4630-9e71-c0da5af4e822",
"claimTimestamp": "2025-06-29T10:15:00Z",
"workflowRequestId": "wf_req_8d9e7f6a-5b4c-3d2e-1f0a-9b8c7d6e5f4a",
"jobMetadata": {
"dialect": "western_cape",
"estimatedDuration": "4m30s",
"transcriptionSequence": 1
}
}
Response 200 OK
{
"claimValidated": true,
"userEligible": true,
"claimId": "claim_f3e4d5c6-b7a8-9c0d-1e2f-3a4b5c6d7e8f",
"userAvailability": "available",
"isProfessional": false,
"bypassQARequired": false,
"currentWorkload": 1,
"maxConcurrentJobs": 3,
"capacityReservedUntil": "2025-06-29T12:15:00Z"
}
8.8.2 POST /api/v1/elo-update
Caller: Workflow Engine → User Management Service
Update Elo ratings based on QA Service comparison results.
{
"comparisonId": "cmp_f7d4e3c2-b1a0-9876-5432-1098765432ab",
"workflowRequestId": "wf_req_9c8d7e6f-5a4b-3c2d-1e0f-9a8b7c6d5e4f",
"comparisonType": "two_way_openai",
"audioSegmentId": "seg_001_012",
"eloChanges": [
{
"transcriberId": "usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"transcriptionId": "txn_42b8e332-f4d6-4630-9e71-c0da5af4e822",
"outcome": "win",
"eloChange": +18,
"newElo": 1268,
"kFactor": 24
},
{
"transcriberId": "usr_6d2f8e4b-1a9c-4d73-b5e1-9f8c3d7a2e5b",
"transcriptionId": "txn_7f3a1b45-c2d8-4e39-8a71-e9f5b2c4d6a8",
"outcome": "loss",
"eloChange": -18,
"newElo": 1162,
"kFactor": 24
}
],
"openaiAssessment": {
"winner": "txn_42b8e332-f4d6-4630-9e71-c0da5af4e822",
"similarityScore": 0.73,
"confidence": 0.92,
"reasoning": "Transcription A not only follows standard orthography but
also captures the semantic meaning more effectively."
}
}
Response 200 OK
{
"eloUpdateConfirmed": true,
"updatesApplied": 2,
"timestamp": "2025-06-29T10:35:23Z",
"userNotifications": [
{
"userId": "usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"notificationType": "elo_increase",
"message": "Congratulations! Your Elo rating increased by 18 points to
1268."
},
{
"userId": "usr_6d2f8e4b-1a9c-4d73-b5e1-9f8c3d7a2e5b",
"notificationType": "elo_decrease",
"message": "Your Elo rating decreased by 18 points to 1162. Keep
practicing!"
}
]
}
8.8.3 POST /api/v1/elo-update/three-way-resolution
Caller: Workflow Engine → User Management Service
Update Elo ratings after QA Service completes three-way tiebreaker analysis.
{
"originalComparisonId": "cmp_f7d4e3c2-b1a0-9876-5432-1098765432ab",
"tiebreakerComparisonId": "cmp_tb_a1b2c3d4-e5f6-7890-abcd-ef1234567890",
"workflowRequestId": "wf_req_7e6d5c4b-3a2f-9e8d-7c6b-5a4f3e2d1c0b",
"threeWayEloChanges": [
{
"transcriberId": "usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"role": "original_transcriber_1",
"outcome": "majority_winner",
"eloChange": +22,
"newElo": 1272
},
{
"transcriberId": "usr_6d2f8e4b-1a9c-4d73-b5e1-9f8c3d7a2e5b",
"role": "original_transcriber_2",
"outcome": "minority_loser",
"eloChange": -11,
"newElo": 1169
},
{
"transcriberId": "usr_4f8a2b6c-d9e1-4c7a-b3f5-8e2d7c1a9b4f",
"role": "tiebreaker_transcriber",
"outcome": "minority_loser",
"eloChange": -11,
"newElo": 1409,
"tiebreakerBonus": {
"applied": true,
"bonusAmount": 5,
"reason": "tiebreaker_participation"
}
}
]
}
Response 200 OK
{
"eloUpdateConfirmed": true,
"updatesApplied": 2,
"timestamp": "2025-06-29T10:40:00Z",
"userNotifications": [
{
"userId": "usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"notificationType": "elo_increase",
"message": "Great job! Your Elo rating increased by 22 points to 1272."
},
{
"userId": "usr_6d2f8e4b-1a9c-4d73-b5e1-9f8c3d7a2e5b",
"notificationType": "elo_decrease",
"message": "Your Elo rating decreased by 22 points to 1140. Review the
feedback for improvement tips."
}
]
}
8.8.4 POST /api/v1/users/{userId}/validate-tiebreaker-claim
Caller: Workflow Engine → User Management Service
Validate user eligibility for tiebreaker transcription with bonus incentive.
{
"originalJobId": "job_42b8e332-f4d6-4630-9e71-c0da5af4e822",
"tiebreakerRequestId": "tbr_a1b2c3d4-e5f6-7890-abcd-ef1234567890",
"urgency": "high",
"tiebreakerDeadline": "2025-06-29T14:00:00Z",
"bonusMultiplier": 1.2,
"requiredMinElo": 1300,
"originalTranscribers": [
"usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"usr_6d2f8e4b-1a9c-4d73-b5e1-9f8c3d7a2e5b"
]
}
Response 200 OK
{
"tiebreakerClaimValidated": true,
"userId": "usr_4f8a2b6c-d9e1-4c7a-b3f5-8e2d7c1a9b4f",
"userEloQualified": true,
"currentElo": 1420,
"isOriginalTranscriber": false,
"claimId": "claim_tb_9f8e7d6c-5b4a-3c2d-1e0f-9a8b7c6d5e4f",
"bonusConfirmed": true,
"estimatedCompletion": "45m"
}
Response 403 Forbidden (User was original transcriber)
{
"error": "original_transcriber_not_eligible",
"message": "Users who participated in the original transcription cannot be
tiebreakers",
"userId": "usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"wasOriginalTranscriber": true
}
8.8.4 POST /api/v1/workflow/notify-elo-updated
Caller: User Management → Workflow Engine
Notify the Workflow Engine when Elo updates are complete.
{
"eventType": "elo_updated",
"updateId": "upd_7e6d5c4b-3a2f-9e8d-7c6b-5a4f3e2d1c0b",
"eventData": {
"comparisonId": "cmp_f7d4e3c2-b1a0-9876-5432-1098765432ab",
"usersUpdated": 2,
"updateResults": [
{
"userId": "usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"newElo": 1268,
"change": 18
}
]
}
}
Response 202 Accepted
{
"acknowledged": true,
"workflowAction": "job_finalization_scheduled"
}
8.9 POST /api/v1/admin/users/{userId}/set-professional
Designate a user as a professional transcriber (requires admin role).
Request Body
{
"isProfessional": true,
"professionalVerification": {
"verificationDocuments": ["certification_id_123"],
"professionalLevel": "expert",
"bypassQAComparison": true
},
"authorizedBy": "admin_user_id"
}
Response 200 OK
{
"userId": "usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"roleUpdated": true,
"isProfessional": true,
"previousRole": "transcriber",
"newRole": "professional",
"effectiveFrom": "2025-07-09T10:00:00Z"
}
8.10 GET /api/v1/users/{userId}/professional-status
Check if a user has professional transcriber designation. Note: This endpoint is specifically
designed for service-to-service calls via Workflow Engine.
Response 200 OK
{
"userId": "usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"isProfessional": true,
"professionalDetails": {
"designation": "professional",
"level": "expert",
"bypassQAComparison": true,
"designatedAt": "2025-05-20T10:00:00Z",
"designatedBy": "admin_usr_123"
},
"currentElo": 1850,
"totalJobsCompleted": 523
}
Response 200 OK (Non-professional)
{
"userId": "usr_6d2f8e4b-1a9c-4d73-b5e1-9f8c3d7a2e5b",
"isProfessional": false,
"currentRole": "transcriber",
"currentElo": 1367,
"eligibleForProfessional": true,
"eligibilityCriteria": {
"minEloRequired": 1600,
"minJobsRequired": 500,
"userElo": 1367,
"userJobs": 247
}
}
8.11 POST /api/v1/users/check-professional-status
Batch check professional status for multiple users (for Workflow Engine use).
{
"userIds": [
"usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd",
"usr_6d2f8e4b-1a9c-4d73-b5e1-9f8c3d7a2e5b"
]
}
Response 200 OK
{
"professionalStatuses": {
"usr_8ee9d7f5-a050-44d1-8cc2-27f37d7c55dd": {
"isProfessional": true,
"bypassQAComparison": true
},
"usr_6d2f8e4b-1a9c-4d73-b5e1-9f8c3d7a2e5b": {
"isProfessional": false,
"bypassQAComparison": false
}
},
"summary": {
"totalChecked": 2,
"professionals": 1,
"standardTranscribers": 1
}
}
9 Elo Rating System & Performance Tracking
9.1 Elo Rating System Design
The User Management Service implements a chess-style Elo rating system to objectively
measure transcriber performance based on head-to-head transcription quality
comparisons:
Component Description
Initial Rating All new transcribers start with an Elo rating of 1200 points
K-Factor K=32 for users with <30 games, K=24 for users with 30-100 games, K=16 for
users with >100 games
Expected Score E = 1 / (1 + 10^((OpponentElo - UserElo) / 400))
Actual Score Win = 1.0, Loss = 0.0, Draw = 0.5 (determined by OpenAI linguistic
comparison)
Elo Update
Formula
NewElo = OldElo + K × (ActualScore - ExpectedScore)
Elo Rating Range 800 (novice) to 2200+ (expert), with most users in 1000-1800 range
9.2 Performance Metrics & Analytics
The system tracks comprehensive performance metrics to provide insights for both
transcribers and administrators:
Transcriber Performance Dashboard
• Current Elo Rating: Live rating based on all completed comparisons
• Peak Elo: Highest rating achieved to date
• Games Played: Total number of head-to-head comparisons
• Win Rate: Percentage of “wins” in quality comparisons
• Elo Trend: Recent rating changes (7-day, 30-day trends)
• Dialect-Specific Performance: Elo sub-ratings for specific dialects
Administrative Analytics
• Transcriber Distribution: Population distribution across Elo ranges
• Quality Correlation: Correlation between Elo and objective quality metrics
• Workload Efficiency: Correlation between Elo and transcription speed
• Performance Outliers: Identification of rapid improvers or declining performers
• System Health: Distribution shifts, rating inflation/deflation monitoring
9.3 OpenAI-Based Comparison Workflow
The Elo rating updates follow a specific workflow orchestrated by the Workflow Engine:
1. Transcription Completion: Two independent transcribers complete the same audio
segment
2. OpenAI Comparison: QA Service uses OpenAI to linguistically compare
transcriptions
3. Winner Determination: OpenAI identifies superior transcription with confidence
score
4. Elo Calculation: User Management Service applies chess-style Elo formulas
5. Rating Update: Both users’ ratings updated based on outcome and expected results
6. Notification: Users notified of rating changes and performance insights
For fundamental disagreements (similarity <65%), a third transcriber is requested for
tiebreaker evaluation with modified Elo distribution.
9.4 Elo Implementation Considerations
The Elo system implementation addresses several key considerations:
Rating Stability & Confidence
• Provisional Period: First 30 games use higher K-factor (32) for faster convergence
• Confidence Interval: Each rating has a ±50 point confidence interval
• Rating Protection: Anti-sandbagging measures prevent deliberate rating
manipulation
• Inactivity Handling: Ratings preserved during inactivity periods up to 60 days
Fairness & Matching
• Similar Skill Matching: Open-access system allows users to select any job
• Competition Balance: Job distribution ensures fair comparison opportunities
• Dialect Expertise: Users can specialize in specific dialects with separate Elo tracking
• Performance Transparency: All users can view leaderboards and performance
metrics
System Integrity
• Rating Floor: Minimum rating of 800 prevents excessive discouragement
• Rating Consistency: Regular calibration to prevent rating inflation/deflation
• Audit Trail: Complete history of all Elo changes with comparison references
• Anti-Gaming Measures: Algorithms to detect and prevent rating manipulation
10 Test Strategy
10.1 Functional Test Cases
ID Test Scenario Input/Conditions Expected Outcome Priority
TC-1 User registration
with valid ID
number
Valid South African ID
number, complete profile
data
User created; status set to
pending_verification; initial Elo
1200
Critical
TC-2 Elo rating update
after OpenAI
comparison
Comparison results with
clear winner; valid user
IDs
Elo ratings updated according
to formula; history recorded
Critical
TC-3 Open-access job
claiming
Available user with
capacity; valid job ID
Job claimed; availability
updated; claim record created
High
TC-4 Availability status
management
Status change request;
active user
Status updated in Redis and
PostgreSQL; event published
High
TC-5 User profile
retrieval with
statistics
Valid user ID with
completed jobs
Complete profile with Elo
history and performance
metrics
Medium
TC-6 Leaderboard
generation
System with active users
of varying Elo
Correctly sorted leaderboard
with proper statistics
Medium
TC-7 Three-way
tiebreaker
Disputed transcription
with <65% similarity
Tiebreaker request created;
eventual Elo adjustment
High
resolution
TC-8 Book-out timeout
handling
Claimed job exceeding
timeout window
Job released; user availability
updated; event published
High
10.2 Performance Test Cases
ID Test Scenario Load Conditions Performance Target Monitoring
PT-1 User lookup
response time
5,000 concurrent users;
500 queries/second
p95 ≤ 200ms Response time
histograms
PT-2 Job claiming
concurrency
500 concurrent claim
attempts
p95 ≤ 500ms; no
double-claims
Latency + error
rate
PT-3 Bulk Elo update
processing
1,000 Elo updates in 1-
minute window
Complete in <5
minutes; no data loss
Throughput +
accuracy
PT-4 Redis-PostgreSQL
synchronization
High update volume
during peak load
Data consistency
within 30 seconds
Sync delay
metrics
PT-5 Event publication
latency
High-volume comparison
results
Kafka publish
latency p95 ≤ 50ms
Message queue
metrics
10.3 Integration Test Cases
ID Test Scenario Integration Points Test Approach Validation
IT-1 End-to-end job
claim workflow
Workflow Engine,
Transcription Service
API orchestration
simulation
Trace
completion
IT-2 Elo update from QA
comparison
Workflow Engine, QA
Service
Mocked OpenAI
comparison results
Elo formula
verification
IT-3 Authentication flow VectorMind
IdentityServer
OAuth token
validation
Security
verification
IT-4 Event consumption
by analytics
Kafka, Analytics Service Event publication and
capture
End-to-end
tracing
IT-5 Database failover
resilience
PostgreSQL
primary/replica
Simulated database
failure
Zero data loss
10.4 Security & Compliance Tests
ID Test Scenario Security Focus Test Approach Compliance Impact
ST-1 PII data
protection
Encryption at rest and
in transit
Security scanning +
manual review
POPIA compliance
ST-2 Role-based
access control
Permission
enforcement
Role impersonation
testing
Access audit
requirements
ST-3 ID verification
safeguards
ID data protection Security penetration
testing
Personal data
protection
ST-4 Audit trail
completeness
Comprehensive
logging
Log validation for key
events
Legal requirements
ST-5 Data retention
enforcement
Compliant data
lifecycle
Simulated time
advancement
Retention policy
validation
11 CI / CD & Deployment
11.1 CI/CD Pipeline Configuration
The User Management Service follows our standard CI/CD pipeline with some servicespecific
configurations:
# Azure DevOps Pipeline Configuration
trigger:
branches:
include:
- main
- release/*
- feature/*
stages:
- stage: Build
jobs:
- job: BuildAndTest
steps:
- task: DotNetCoreCLI@2
displayName: 'Restore packages'
inputs:
command: 'restore'
projects: 'src/**/*.csproj'
- task: DotNetCoreCLI@2
displayName: 'Build solution'
inputs:
command: 'build'
projects: 'src/**/*.csproj'
arguments: '--configuration Release'
- task: DotNetCoreCLI@2
displayName: 'Run unit tests'
inputs:
command: 'test'
projects: 'tests/**/*UnitTests.csproj'
arguments: '--configuration Release --collect:"XPlat Code
Coverage"'
- task: DotNetCoreCLI@2
displayName: 'Run integration tests'
inputs:
command: 'test'
projects: 'tests/**/*IntegrationTests.csproj'
arguments: '--configuration Release'
- task: Docker@2
displayName: 'Build and push Docker image'
inputs:
containerRegistry: 'acr-connection'
repository: 'usermanagement'
command: 'buildAndPush'
Dockerfile: 'src/Dockerfile'
tags: |
$(Build.BuildNumber)
latest
- stage: Deploy
dependsOn: Build
jobs:
- deployment: DeployToK8s
environment: 'production'
strategy:
runOnce:
deploy:
steps:
- task: HelmDeploy@0
displayName: 'Deploy Helm chart'
inputs:
connectionType: 'Kubernetes Service Connection'
kubernetesServiceConnection: 'aks-production'
namespace: 'usermanagement'
command: 'upgrade'
chartType: 'FilePath'
chartPath: './helm/usermanagement'
releaseName: 'usermanagement'
valueFile: './helm/usermanagement/values.yaml'
overrideValues: 'image.tag=$(Build.BuildNumber)'
11.2 Deployment Architecture
The User Management Service is deployed with the following configuration:
Component Configuration
Container mcr.microsoft.com/dotnet/aspnet:8.0-alpine base image; 2 CPU / 4 Gi RAM
resource limits
Replicas Horizontal Pod Autoscaler with min 2, max 10 pods; target 60% CPU utilization
Database PostgreSQL 15 Flex managed service with primary/replica configuration
Cache Redis Cluster (3 master + 3 replica) for session state and availability data
Networking Internal service mesh with mTLS; API gateway for external access with rate limiting
Monitoring Prometheus metrics; Grafana dashboards; OpenTelemetry tracing to Azure
Application Insights
Scaling
Policy
CPU + memory-based autoscaling; batch processing priority for Elo calculations
11.3 Blue/Green Deployment Strategy
We implement a blue/green deployment strategy to ensure zero downtime during updates:
1. Database Migrations: Flyway for schema versioning with forward-only migrations
2. Deployment Sequence:
– Deploy new version to “green” environment
– Run smoke tests and health checks
– Gradually shift traffic from “blue” to “green” (10% → 50% → 100%)
– Monitor error rates and performance metrics
– Promote “green” to production if successful
– Keep “blue” as rollback option for 1 hour
3. Rollback Procedure:
– Automated rollback if error rate exceeds 0.1%
– Shift traffic back to “blue” environment
– Preserve database state with transaction logs
– Alert operations team for manual intervention if needed
11.4 Environment Configuration
The service uses a configuration-first approach with environment variables for all settings:
# Environment Configuration
env:
# Database Configuration
- name: DB_CONNECTION_STRING
valueFrom:
secretKeyRef:
name: db-secrets
key: connection-string
# Redis Configuration
- name: REDIS_CONNECTION_STRING
valueFrom:
secretKeyRef:
name: redis-secrets
key: connection-string
# Feature Flags
- name: ENABLE_GRPC
value: "false"
- name: ENABLE_ID_DOCUMENT_COLLECTION
value: "true"
- name: POPIA_COMPLIANCE_MODE
value: "strict"
# Elo Rating Configuration
- name: INITIAL_ELO_RATING
value: "1200"
- name: ELO_K_FACTOR_NEW
value: "32"
- name: ELO_K_FACTOR_ESTABLISHED
value: "24"
- name: ELO_K_FACTOR_EXPERT
value: "16"
# Performance Configuration
- name: JOB_TIMEOUT_HOURS
value: "4"
- name: MAX_CONCURRENT_JOBS
value: "3"
- name: REDIS_CACHE_TTL_MINUTES
value: "360"
11.5 Monitoring & Alerting
The service implements comprehensive monitoring and alerting:
Metric Alert Threshold Response
API Response Time p95 > 500ms for 5 minutes Auto-scaling trigger + investigation
Error Rate >0.1% over 1-minute window Incident alert + potential rollback
Database Connection Errors >5 in 1 minute Failover trigger + on-call alert
Redis Cache Miss Rate >20% for 5 minutes Cache warming + potential scaling
Elo Calculation Backlog >1000 pending for 10 minutes Scaling trigger + batch prioritization
Authentication Failures >10 for same user in 1 minute Security alert + potential blocking